{"version":3,"sources":["services/persons.js","components/Person.js","components/NewPersonForm.js","components/FilterNames.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","objectUpdate","name","put","Person","person","handleDelete","number","onClick","NewPersonForm","addPerson","newName","inputName","inputPhone","newPhone","onSubmit","value","onChange","type","FilterNames","onInput","Notification","message","status","className","App","useState","persons","setPersons","setNewName","setNewPhone","shown","setShown","notificationMessage","setNotificationMessage","notificationStatus","setNotificationStatus","useEffect","personService","then","response","data","catch","error","console","log","personsToShow","length","filter","toLowerCase","includes","e","target","event","preventDefault","personObject","duplicateName","find","window","confirm","map","setTimeout","concat","alert","i","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6a0e19.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updatePerson = (objectUpdate, name, id) => {\r\n    return axios.put(`${baseUrl}/${id}`, objectUpdate)\r\n}\r\n\r\nexport default {\r\n    getPersons,\r\n    createPerson,\r\n    deletePerson,\r\n    updatePerson\r\n}","import React from 'react'\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n    return (\r\n        <div > {person.name} : {person.number} <button onClick={handleDelete}>delete</button></div>\r\n    )\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nconst NewPersonForm = ({ addPerson, newName, inputName, inputPhone, newPhone }) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                <h1>Add a new</h1>\r\n                name: <input\r\n                    value={newName}\r\n                    onChange={inputName} /> <br />\r\n                number: <input\r\n                    value={newPhone}\r\n                    onChange={inputPhone} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewPersonForm;","import React from 'react';\r\n\r\nconst FilterNames = ({ onInput, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>filter shown with</span> <input onChange={onInput} value={value} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterNames;","import React from 'react'\r\nimport '../Notification.css'\r\n\r\nconst Notification = ({ message, status }) => {\r\n    return (\r\n        <div className={status ? 'positive' : 'negative'}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Person from './components/Person'\nimport NewPersonForm from './components/NewPersonForm'\nimport FilterNames from './components/FilterNames'\nimport Notification from './components/Notification'\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [shown, setShown] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationStatus, setNotificationStatus] = useState(true)\n\n  useEffect(() => {\n    personService\n      .getPersons()\n      .then(response => {\n        setPersons(response.data)\n      })\n      .catch(error => {\n        console.log('fail', error)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newPhone,\n    }\n\n    const duplicateName = persons.find(person => person.name === personObject.name)\n    if (duplicateName) {\n      if (window.confirm(`${duplicateName.name} already added to phonebook, repace the old phone number with a new one? `)) {\n        const id = duplicateName.id\n        personService\n          .updatePerson({ ...duplicateName, number: personObject.number }, personObject.name, id)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== id ? person : response.data))\n            setNotificationStatus(true)\n            setNotificationMessage(`${personObject.name}'s Number Updated Successfully`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 3000)\n            setNewName('')\n            setNewPhone('')\n          }).catch(error => {\n            setNewName('')\n            setNewPhone('')\n            setNotificationStatus(false)\n            setNotificationMessage(`${error.response.data.error}`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 3000)\n            console.log(error.response.data.error)\n          })\n      } else {\n        setNotificationStatus(false)\n        setNotificationMessage(`process cancelled`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 3000)\n        setNewName('')\n        setNewPhone('')\n      }\n    } else if (!personObject.name) {\n      alert('input field is empty')\n    } else {\n      personService\n        .createPerson(personObject)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.concat(personObject))\n          setNotificationStatus(true)\n          setNotificationMessage(\n            `Added ${personObject.name} to the phonebook`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 3000)\n          setNewName('')\n          setNewPhone('')\n        })\n        .catch(error => {\n          setNewName('')\n          setNewPhone('')\n          setNotificationStatus(false)\n          setNotificationMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 3000)\n          console.log(error.response.data.error)\n        })\n    }\n  }\n\n\n  const handleNameInputChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handlePhoneInputChange = (e) => {\n    setNewPhone(e.target.value)\n  }\n\n  const handleFilter = (e) => {\n    setShown(e.target.value.toLowerCase())\n  }\n\n  const personsToShow = shown.length === 0 ? persons : persons.filter(person => person.name.toLowerCase().includes(shown))\n\n  const handleDeleteOf = (id, name) => {\n    console.log(id)\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setNotificationStatus(true)\n          setNotificationMessage(\n            `${name} was deleted from the phonebook `\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 3000)\n        }).catch(error => {\n          console.log('fail', error)\n          setNotificationStatus(false)\n          setNotificationMessage(`Information of ${name} has already been removed from server`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 3000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notificationMessage === null ? null : <Notification message={notificationMessage} status={notificationStatus} />}\n      <FilterNames onInput={handleFilter} value={shown} />\n      <NewPersonForm addPerson={addPerson}\n        inputName={handleNameInputChange}\n        inputPhone={handlePhoneInputChange}\n        newName={newName}\n        newPhone={newPhone}\n      />\n\n      {\n        personsToShow.map((person, i) =>\n          <Person key={i}\n            person={person}\n            handleDelete={() => handleDeleteOf(person.id, person.name)}\n          />)\n      }\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}